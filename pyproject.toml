[build-system]
requires = ["hatchling>=1.5"]
build-backend = "hatchling.build"

[project]
name = "jupyterlab_server"
dynamic = ["version"]
license = { file = "LICENSE" }
description = "A set of server components for JupyterLab and JupyterLab like applications."
keywords = ["jupyter", "jupyterlab"]
classifiers = [
  "Framework :: Jupyter",
  "Framework :: Jupyter :: JupyterLab",
  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research",
  "Intended Audience :: System Administrators",
  "License :: OSI Approved :: BSD License",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",]
requires-python = ">=3.7"
dependencies = [
  "babel",
  "importlib_metadata>=4.8.3;python_version<\"3.10\"",
  "jinja2>=3.0.3",
  "json5",
  "jsonschema>=3.0.1",
  "jupyter_server>=1.8,<3",
  "packaging",
  "requests",
]

[[project.authors]]
name = "Jupyter Development Team"
email = "jupyter@googlegroups.com"

[project.readme]
file = "README.md"
content-type = "text/markdown"

[project.urls]
Homepage = "https://jupyterlab-server.readthedocs.io"
Documentation = "https://jupyterlab-server.readthedocs.io"
Funding = "https://numfocus.org/donate-to-jupyter"
Source = "https://github.com/jupyterlab/jupyterlab_server"
Tracker = "https://github.com/jupyterlab/jupyterlab_server/issues"

[project.optional-dependencies]
openapi = [
  "openapi_core>=0.14.2",
  "ruamel.yaml",
]
test = [
  "codecov",
  "ipykernel",
  "jupyter_server[test]",
  # openapi_core 0.15.0 alpha is not working
  "openapi_core~=0.14.2",
  "openapi-spec-validator<0.5",
  "pytest>=7.0",
  "pytest-console-scripts",
  "pytest-cov",
  "ruamel.yaml",
  "strict-rfc3339"
]

[tool.hatch.version]
path = "jupyterlab_server/_version.py"

[tool.jupyter-releaser]
skip = ["check-links"]

[tool.pytest.ini_options]
addopts = "-raXs --durations 10 --color=yes --doctest-modules"
testpaths = [
    "tests/"
]
timeout = 300
# Restore this setting to debug failures
# timeout_method = "thread"
filterwarnings = [
  "error",
  "module:make_current is deprecated:DeprecationWarning",
  "module:clear_current is deprecated:DeprecationWarning",
  "module:There is no current event loop:DeprecationWarning",
  "ignore:Passing a schema to Validator.iter_errors:DeprecationWarning",
  "module:Subclassing validator classes is not intended to be part of their public API:DeprecationWarning"
]
