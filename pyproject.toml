[build-system]
requires = ["hatchling>=1.5"]
build-backend = "hatchling.build"

[project]
name = "jupyterlab_server"
dynamic = ["version"]
license = { file = "LICENSE" }
description = "A set of server components for JupyterLab and JupyterLab like applications."
keywords = ["jupyter", "jupyterlab"]
classifiers = [
  "Framework :: Jupyter",
  "Framework :: Jupyter :: JupyterLab",
  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research",
  "Intended Audience :: System Administrators",
  "License :: OSI Approved :: BSD License",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Typing :: Typed"]
requires-python = ">=3.7"
dependencies = [
  "babel>=2.10",
  "importlib_metadata>=4.8.3;python_version<\"3.10\"",
  "jinja2>=3.0.3",
  "json5>=0.9.0",
  "jsonschema>=3.0.1",
  "jupyter_server>=1.8,<3",
  "packaging>=21.3",
  "requests>=2.28",
]

[[project.authors]]
name = "Jupyter Development Team"
email = "jupyter@googlegroups.com"

[project.readme]
file = "README.md"
content-type = "text/markdown"

[project.urls]
Homepage = "https://jupyterlab-server.readthedocs.io"
Documentation = "https://jupyterlab-server.readthedocs.io"
Funding = "https://numfocus.org/donate-to-jupyter"
Source = "https://github.com/jupyterlab/jupyterlab_server"
Tracker = "https://github.com/jupyterlab/jupyterlab_server/issues"

[project.optional-dependencies]
docs = [
  "autodoc-traits",
  "docutils<0.20",
  "pydata_sphinx_theme",
  "sphinx",
  "sphinx-copybutton",
  "sphinxcontrib-openapi",
  "myst-parser",
  "mistune<3",
  "jinja2<3.2.0"
]
openapi = [
  "openapi_core>=0.14.2",
  "ruamel.yaml",
]
test = [
  "codecov",
  "ipykernel",
  "jupyter_server[test]",
  # openapi_core 0.15.0 alpha is not working
  "openapi_core~=0.14.2",
  "openapi-spec-validator<0.6",
  "requests_mock",
  "pytest>=7.0",
  "pytest-console-scripts",
  "pytest-cov",
  "ruamel.yaml",
  "strict-rfc3339"
]
lint = [
  "black[jupyter]>=22.6.0",
  "mdformat>0.7",
  "mdformat-gfm>=0.3.5",
  "ruff>=0.0.156"
]
typing = ["mypy>=0.990"]

[tool.hatch.version]
path = "jupyterlab_server/_version.py"
validate-bump = false

[tool.hatch.envs.docs]
features = ["docs"]
[tool.hatch.envs.docs.scripts]
build = "make -C docs html SPHINXOPTS='-W'"

[tool.hatch.envs.test]
features = ["test"]
[tool.hatch.envs.test.scripts]
test = "python -m pytest -vv {args}"
nowarn = "test -W default {args}"

[tool.hatch.envs.cov]
features = ["test"]
dependencies = ["coverage", "pytest-cov"]
[tool.hatch.envs.cov.scripts]
test = "python -m pytest -vv --cov jupyterlab_server --cov-branch --cov-report term-missing:skip-covered {args}"
nowarn = "test -W default {args}"

[tool.hatch.envs.typing]
features = ["typing", "test"]
[tool.hatch.envs.typing.scripts]
test = "mypy --install-types --non-interactive {args:jupyterlab_server tests}"

[tool.hatch.envs.lint]
features = ["lint"]
[tool.hatch.envs.lint.scripts]
style = [
  "ruff {args:.}",
  "black --check --diff {args:.}",
  "mdformat --check {args:docs *.md}"
]
fmt = [
  "black {args:.}",
  "ruff --fix {args:.}",
  "mdformat {args:docs *.md}"
]

[tool.pytest.ini_options]
addopts = "-raXs --durations 10 --color=yes --doctest-modules"
testpaths = [
    "tests/"
]
timeout = 300
# Restore this setting to debug failures
# timeout_method = "thread"
filterwarnings = [
  "error",
  "module:make_current is deprecated:DeprecationWarning",
  "module:clear_current is deprecated:DeprecationWarning",
  "module:There is no current event loop:DeprecationWarning",
  "ignore:Passing a schema to Validator.iter_errors:DeprecationWarning",
  "module:Subclassing validator classes is not intended to be part of their public API:DeprecationWarning"
]

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "def __repr__",
  "if self.debug:",
  "if settings.DEBUG",
  "raise AssertionError",
  "raise NotImplementedError",
  "if 0:",
  "if __name__ == .__main__.:",
  "class .*\bProtocol\\):",
"@(abc\\.)?abstractmethod",
]

[tool.mypy]
check_untyped_defs = true
disallow_incomplete_defs = true
no_implicit_optional = true
pretty = true
show_error_context = true
show_error_codes = true
strict_equality = true
strict_optional = true
warn_no_return = true
warn_return_any = true
warn_unused_configs = true
warn_unused_ignores = true
warn_redundant_casts = true
exclude = "tests/translations/*"

[[tool.mypy.overrides]]
module = [
    "ruamel"
]
ignore_missing_imports = true

[tool.black]
line-length = 100
target-version = ["py37"]
skip-string-normalization = true

[tool.ruff]
target-version = "py37"
line-length = 100
select = [
  "A", "B", "C", "E", "F", "FBT", "I", "N", "Q", "RUF", "S", "T",
  "UP", "W", "YTT",
]
ignore = [
# Q000 Single quotes found but double quotes preferred
"Q000",
# FBT001 Boolean positional arg in function definition
"FBT001", "FBT002", "FBT003",
# C901 `async_setup_kernel` is too complex (12)
"C901",
# C408 Unnecessary `dict` call (rewrite as a literal)
"C408", "C416",
# E501 Line too long (108 > 100 characters)
"E501",
]

[tool.ruff.per-file-ignores]
# S101 Use of `assert` detected
# A001 Variable `id` is shadowing a python builtin
# F841 Local variable `list_data` is assigned to but never used
"tests/*" = ["S101", "A001", "F841"]
# F401 `foo` imported but unused
"jupyterlab_server/server.py" = ["F401"]
