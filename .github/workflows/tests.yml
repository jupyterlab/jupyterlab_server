name: Tests

on:
  push:
    branches: 'master'
  pull_request:
    branches: '*'

defaults:
  run:
    shell: bash -l {0}

jobs:
  test:
    name: ${{ matrix.PLATFORM }} py${{ matrix.PYTHON_VERSION }}
    runs-on: ${{ matrix.PLATFORM }}-latest
    env:
      CI: True
      PYTHON_VERSION: ${{ matrix.PYTHON_VERSION }}
      CODECOV_TOKEN: e025254a-fe54-4914-8890-0c26e7aa0d07
    strategy:
      fail-fast: false
      matrix:
        PYTHON_VERSION: ['3.6', '3.9', 'pypy3']
        PLATFORM: ['ubuntu', 'macos',  'windows']
        exclude:
        - PLATFORM: windows
          PYTHON_VERSION: pypy3
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-py-${{ matrix.PYTHON_VERSION }}-pip-${{ hashFiles('**/setup.py') }}
      - name: Cache conda
        uses: actions/cache@v2
        with:
          path: ~/conda_pkgs_dir
          key:
            ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{
            hashFiles('etc/example-environment.yml') }}
      - name: Setup conda ${{ matrix.PYTHON_VERSION }}
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}
      - name: Install python dependencies
        run: |
          conda install setuptools pip wheel
      - name: Install pywin32 on Windows
        if: ${{ runner.os == 'Windows' }}
        run: conda install pywin32
      - name: Install project dependencies
        run: |
          pip install -v -e ".[test]" --cache-dir ~/.cache/pip
      - run: conda info
      - run: conda list
      - run: conda config --show
      - run: pip check
      - name: Run python tests
        # See `setup.cfg` for full test options
        run: |
          pytest --pyargs jupyterlab_server
      - name: Upload coverage
        run: |
          codecov
      - name: Build docs
        run: |
          set -eux
          pushd docs
          conda env create -f environment.yml
          conda activate jupyterlab_server_documentation
          pip install ..
          make html
          conda deactivate
          popd

  check_release:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        group: [check_release, link_check]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
          architecture: "x64"
      - name: Get pip cache dir
        id: pip-cache
        run: |
          echo "::set-output name=dir::$(pip cache dir)"
      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-pip-${{ hashFiles('setup.cfg') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-pip-
      - name: Cache checked links
        if: ${{ matrix.group == 'link_check' }}
        uses: actions/cache@v2
        with:
          path: ~/.cache/pytest-link-check
          key: ${{ runner.os }}-linkcheck-${{ hashFiles('**/*.md', '**/*.rst') }}-md-links
          restore-keys: |
            ${{ runner.os }}-linkcheck-
      - name: Upgrade packaging dependencies
        run: |
          pip install --upgrade pip setuptools wheel --user
      - name: Install Dependencies
        run: |
          pip install -e .
      - name: Check Release
        if: ${{ matrix.group == 'check_release' }}
        uses: jupyter-server/jupyter_releaser/.github/actions/check-release@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Run Link Check
        if: ${{ matrix.group == 'link_check' }}
        uses: jupyter-server/jupyter_releaser/.github/actions/check-links@v1
